image: debian:bullseye

before_script:
  - pwd
  - apt-get update
  - apt-get install -y curl wget gnupg bash git unzip
  - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
  - apt-get install -y nodejs
  - node -v
  - npm -v
  - cd ./CIScripts
  - pwd
  - ls -l
  - chmod +x setup-build-env.sh
  - ./setup-build-env.sh
  - cd -

stages:
  - build
  - test
  - verify

build:
  stage: build
  tags:
    - docker
  script:
    - curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
    - export PATH=$PATH:/root/bin
    - pwd
    - cd Wio\ Terminal\ Code/main
    - echo "Building project..."
    - arduino-cli core update-index
    - arduino-cli core install Seeeduino:samd
    - mkdir builds
    - cd builds
    - arduino-cli compile --fqbn Seeeduino:samd:seeed_wio_terminal || { echo "Compiling the arduino code has failed." >&2; exit 1; }
    - cd -
  artifacts:
    paths:
      - Wio\ Terminal\ Code/builds
    
test:
  stage: test
  tags:
    - docker
  script:
    - echo "Testing in progress..."
    - cd ./WebApplication/javascript
    - npm install
    - node jsTests.cjs
    - cd ..
    - cd ..

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'

verify:
  stage: verify
  tags:
    - docker
  script:
    - echo "Deploying Web application"
    - cd ./WebApplication/javascript
    - npm init -y
    - npm install
    - node server.cjs send
    - echo "Checking web-server"
    - node web-server.cjs check
    - echo "Checking authentication server"
    - node auth-server.cjs check

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
